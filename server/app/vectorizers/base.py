import pandas as pd
from scipy.sparse import spmatrix

stop_words_punct = ['!', ',', '.', '?', '—', ':', '...', '(', ')'] # дополняем список стоп-слов знаками препинания
stop_words_num = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'] # дополняем список стоп-слов цифрами
stop_words_prepositions = ['в', 'без', 'до', 'для', 'за', 'через', 'над', 'по', 'из', 'у', 'около', 'под', 'о', 'про', 'на', 'к', 'перед', 'при', 'с', 'между'] # дополняем список стоп-слов предлогами
stop_words_conjunctions = ['и', 'а', 'но', 'да', 'или', 'когда', 'что', 'чтобы', 'если', 'как'] # дополняем список стоп-слов союзами
stop_words_pronouns = ['я', 'мы', 'ты', 'вы', 'он', 'она', 'оно', 'они', 'себя', 'мой', 'наш', 'твой', 'ваш', 'свой', 'кто', 'что', 'какой', 'каков', 'который', 'чей', 'сколько', 'этот', 'тот', 'такой', 'таков', 'столько', 'сам', 'самый', 'весь', 'вся', 'всё', 'все', 'всякий', 'каждый', 'любой', 'иной', 'никто', 'ничто', 'никакой', 'ничей', 'никоторый', 'некого', 'нечего', 'некто', 'нечто', 'некоторый', 'некий', 'несколько', 'кто-то', 'что-то', 'сколько-нибудь', 'какой-либо', 'кое-что', 'его'] # дополняем список стоп-слов местоимениями
stop_words_particles = ['вот', 'вон', 'это', 'именно', 'точно', 'подлинно', 'почти', 'ровно', 'лишь', 'ни', 'же', 'даже', 'уж', 'и', 'ведь', 'все-таки', 'просто', 'только', 'лишь', 'всего', 'хоть', 'лишьтолько', 'хоть', 'исключительно', 'разве', 'неужели', 'ли', 'а', 'как', 'то-то', 'ишь', 'да', 'точно', 'так', 'авось', 'б', 'бы', 'да', 'давай', 'давайте', 'пусть', 'пускай', 'не', 'ни', 'то', 'от', 'кое', 'либо', 'нибудь', 'таки'] # дополняем список стоп-слов частицами

stopword_presets = {
    'punct': stop_words_punct,
    'num': stop_words_num,
    'prepositions': stop_words_prepositions,
    'conjunctions': stop_words_conjunctions,
    'pronouns': stop_words_pronouns,
    'particles': stop_words_particles
}

class BaseVertorizer:
    def __init__(self, stop_words_presets):
        self.stop_words = []
        for preset in stop_words_presets or []:
            self.stop_words.extend(stopword_presets[preset])

    def fit_transform(self, texts: pd.DataFrame) -> spmatrix:
        raise NotImplemented